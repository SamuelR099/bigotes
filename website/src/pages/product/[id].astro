---
import HeaderStore from '../../components/HeaderStore.astro';
import Instagram from '../../components/icons/Instagram.astro';
import Facebook from '../../components/icons/Facebook.astro';
import Footer from '../../components/Footer.astro';
import Layout from '../../layouts/Layout.astro';
import "@fortawesome/fontawesome-free/css/all.min.css";
import MenuD from '../../components/MenuD.astro';
import Menu from '../../components/Menu.astro';


interface Marca {
  idMarca: number;
  nombreMarca: string;
  stock: number;
}

interface Producto {
  id: number;
  nombre: string;
  descripcion: string;
  precio: number;
  imagenes: string[];
  marcas: Marca[];
}

export async function getStaticPaths() {
  try {
    const res = await fetch('http://localhost:8080/productos');
    const productos: Producto[] = await res.json();

    return productos.map((product) => ({
      params: { id: product.id.toString() },
      props: { product }
    }));
  } catch (error) {
    console.error("❌ Error al obtener productos:", error);
    return [];
  }
}

const { product }: { product: Producto } = Astro.props;

if (!product) {
  throw new Error("⚠️ Producto no encontrado");
}
const totalStock = product.marcas.reduce((acc, marca) => acc + marca.stock, 0);
---


<body>
  <main>
   
      <MenuD class="Product-menu"/>
      <Menu/>
  
      <HeaderStore/>
      <Layout headerClass="Product-header"/>
  <div class="product-container">
    <div class="product-image">
      <div class="zoom iiz mb-6 border border-border dark:border-light rounded-md">
        <img src={product.imagenes[0]} alt={product.nombre} class="zoom-image" id="productImage" />
      </div>
      <div class="thumbnail-container">
        <img src={product.imagenes[0]} alt={product.nombre} class="thumbnail-image" />
      </div>
    </div>
    
    <div class="product-details">
      <h1>{product.nombre}</h1>
      <p class="price">
        Precio: <span>${product.precio}</span>
      </p>
    
      <p class="product-stock">
        Stock: <span>{totalStock}</span>
      </p>
      
      <form>
        <label for="marca">Marca:</label>
        <select id="marca" name="marca" data-marcas={JSON.stringify(product.marcas)}>
                  {product.marcas.map((marca) => (
                    <option value={marca.idMarca}>{marca.nombreMarca}_Stock:{marca.stock}</option>
                  ))}
                </select>
        <label for="size">Size:</label>
        <select id="size" name="size">
          <option value="">{}</option>
        </select>
        <button type="submit">Add To Cart</button>
      </form>
      <p class="delivery">{}</p>
      <p class="payment">Payment: {}</p>
      <div class="share">
        <p>Share:</p>
        <div class="share-icons">
          <span>
            <a href="https://www.instagram.com" target="_blank">
              <Instagram />
            </a>
          </span>
          <span>
            <a href="https://www.facebook.com/sharer/sharer.php?u=https://tudominio.com" target="_blank">
              <Facebook />
            </a>
          </span>
        </div>
      </div>
      <div class="tags">
        <p>Tags:</p>
        <ul>
         
        </ul>
      </div>
    </div>
  </div>

  <div class="description-wrapper">
    <div class="description-container">
      <h2 class="description-title">Description</h2>
      <p>{product.descripcion}</p>
    </div>
  </div>
    <Footer/> </main>
    <body/>
</Layout>



<style>

.product-container {
  display: flex;
    gap: 10px;
    align-items: flex-start;
    max-width: 1300px;
    margin: 40px auto;
    padding: 20px 20px 137px;
    background: #fff;
    border-radius: 10px;
    box-shadow: 0 0 10px #0000001a;
    
}



.product-image {
   
    position: relative;
}

.product-image img {
    width: 350px;
    border-radius: 10px;
    transition: transform 0.3s ease;
    cursor: zoom-in;
    margin-left: 0px;
     position: relative; /* Asegura que los elementos hijos con position: absolute se ubiquen dentro de él */
    display: flex;
    flex-direction: column;
    align-items: center;
  
}

.thumbnail-container {
  
  position: absolute;
  bottom: -260px;
  left: 15px;
  width: 100px;
  height: 100px;
  border: 2px solid #fff;
  border-radius: 10px;
  box-shadow: 0 0 10px #0000001a;
  overflow: hidden;
  background-color: #f9f9f9;
  display: flex;
  align-items: center;
  justify-content: center;
}

.thumbnail-image {
  width: 100%;
  height: 100%;
  object-fit: contain;
  border-radius: 5px;
    
}

.product-details {
   max-width: 516px;
  padding-right: 181px;
}

h1 {
  font-size: 2rem;
  font-weight: bold;
  margin-bottom: 10px;
}

.price {
  font-size: 1.5rem;
  font-weight: bold;
  margin-bottom: 10px;
  display: flex;
  align-items: center;
  gap: 10px;
}

del {
    color: gray;
    margin-left: 10px;
}

form {
    display: flex;
    flex-direction: column;
    gap: 10px;
    margin-bottom: 15px;
}

label {
    font-weight: bold;
}

select, button {
    padding: 10px;
    border: 1px solid #ddd;
    border-radius: 5px;
}

button {
    background: black;
    color: white;
    font-weight: bold;
    cursor: pointer;
}

.delivery {
    font-weight: bold;
    margin-bottom: 10px;
}

.payment {
    font-weight: bold;
    margin-bottom: 10px;
}

.share {
    margin-bottom: 15px;
}
.share-icons {
    display: flex;
    gap: 16px; /* Mayor separación entre íconos */
    align-items: center;
    justify-content: flex-start; /* Alineados a la izquierda */
}
.share-icons a {
    display: flex;
    height: 3rem;
    width: 3rem;
    align-items: center;
    justify-content: center;
    border-radius: .375rem;
    border-width: 1px;
    --tw-border-opacity: 1;
    border-color: rgb(234 234 234 / var(--tw-border-opacity, 1));
    --tw-bg-opacity: 1;
    background-color: rgb(255 255 255 / var(--tw-bg-opacity, 1));
    padding: .25rem;
    text-align: center;
    line-height: 2.25rem;
    --tw-text-opacity: 1;
    color: rgb(102 102 102 / var(--tw-text-opacity, 1)); /* Color gris oscuro */
    transition-duration: .3s;
}

/* 👀 Resalta el icono al pasar el mouse */
.share-icons a:hover {
    background-color: rgb(234 234 234 / var(--tw-bg-opacity, 1)); /* Gris claro */
}

/* 🌟 Ajuste especial para Instagram (hace que sea visible en fondo blanco) */
.share-icons a svg {
    fill: black; /* O cualquier color visible */
}


.tags ul {
    display: flex;
    gap: 10px;
    list-style: none;
    padding: 0;
}

.tags li {
    background: #eee;
    padding: 5px 10px;
    border-radius: 5px;
    font-size: 0.9rem;
}

.description-wrapper {
    display: flex;
    justify-content: center;
    width: 100%;
    margin-top: -20px;
}

.description-container {
    max-width: 800px; /* Ajusta según necesites */
    width: 100%;
    padding: 15px;
    background: #fff;
    border-radius: 10px;
    border: 2px solid #ddd;
    transition: all 0.3s ease-in-out;
}
.description-title {
    font-weight: bold;
    font-size: 1.5rem;
    margin-bottom: 10px;
    text-align:start; /* Centrar el título */
    color: #333; /* Color oscuro para mejor contraste */
}


.zoom {
    position: relative;
    height: 623px;
    
    overflow: hidden;
    cursor: zoom-in;
    border-radius: 10px;
    display: flex;
    justify-content: center;
    align-items: center;
    box-sizing: border-box;
    border-width: 0;
    border-style: solid;
    border-color: #e5e7eb;
}

.zoom-image {
  width: 100%;
  height: 100%;
  object-fit: contain; /* mantiene proporción sin recortes */
  display: block;
  transition: transform 0.3s ease;
  transform-origin: center center;
}

.zoom:hover .zoom-image {
    transform: scale(1.5);
    cursor: zoom-out;
}

@media (max-width: 768px) {
/* Para pantallas medianas (tablets) */
 .product-container {
        flex-direction: column;
        padding: 15px;
        align-items: center;
        text-align: center;
        gap: 20px;
    }

    .product-image {
        width: 100%;
        max-width: 300px;
    }

    .product-image img {
        max-width: 100%;
        height: auto;
    }

    .thumbnail-container {
        display: none;
    }

    .product-details {
        max-width: 100%;
        padding: 0 15px;
    }

    h1 {
        font-size: 1.8rem;
    }

    .price {
        font-size: 1.4rem;
    }

    form {
        gap: 10px;
        display: flex;
        flex-direction: column;
        align-items: center;
    }

    select, button {
        padding: 12px;
        font-size: 1rem;
        width: 100%;
        max-width: 300px;
    }

    button {
        background: black;
        color: white;
        font-weight: bold;
        cursor: pointer;
    }

    .share-icons {
        gap: 10px;
        justify-content: center;
    }

    .description-container {
        max-width: 100%;
        padding: 15px;
    }

    .zoom {
        width: 100%;
        height: auto;
    }

    .zoom img {
        max-width: 100%;
        height: auto;
    }
  }
</style>

<script>
document.addEventListener("DOMContentLoaded", () => {
  const image = document.querySelector("#productImage") as HTMLImageElement | null;

  if (!image) {
    console.error("❌ Error: La imagen no fue encontrada.");
    return;
  }

  const zoomFactor = 1.5; // Factor de zoom (ajusta según sea necesario)

  image.addEventListener("mousemove", (event: MouseEvent) => {  // Usa MouseEvent en lugar de Event
    const rect = image.getBoundingClientRect();
    const xPercent = ((event.clientX - rect.left) / rect.width) * 100;
    const yPercent = ((event.clientY - rect.top) / rect.height) * 100;

    // Establecer el punto de origen del zoom
    image.style.transformOrigin = `${xPercent}% ${yPercent}%`;
    image.style.transform = `scale(${zoomFactor})`;
  });

  image.addEventListener("mouseleave", () => {
    image.style.transform = "scale(1)"; // Restablecer el zoom al salir
  });
});


</script>



<script>
  interface Marca {
    idMarca: number;
    nombreMarca: string;
    stock: number;
  }

  const marcaSelect = document.querySelector('#marca') as HTMLSelectElement;
  const stockElement = document.querySelector('#stock') as HTMLElement;

  const marcas = JSON.parse(marcaSelect.dataset.marcas || '[]') as Marca[];

  function updateStock() {
    const selectedId = parseInt(marcaSelect.value);
    const selectedMarca = marcas.find((m: Marca) => m.idMarca === selectedId);
    if (selectedMarca) {
      stockElement.textContent = selectedMarca.stock.toString();
    }
  }

  marcaSelect?.addEventListener('change', updateStock);
  window.addEventListener('DOMContentLoaded', updateStock);
</script>