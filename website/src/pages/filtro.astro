---
import HeaderStore from "../components/HeaderStore.astro";
import Footer from "../components/Footer.astro";
import Layout from "../layouts/Layout.astro";
import "../styles/style.css";
import MenuD from "../components/MenuD.astro";
import Menu from "../components/Menu.astro";
const response = await fetch("http://localhost:8080/productos"); // Ajusta la URL
const productos = await response.json();
import AddToCartButton from "../components/AddToCartButton.tsx";

interface Producto {
[x: string]: any;
  id: number;
  nombre: string;
  descripcion: string;
  precio: number;
  stock: number;
  imagenes: string[];
  name: string;
}

---
<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8"> <!-- Aquí se configura UTF-8 -->
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Filtro</title>
  
</head>


<body >
 
<MenuD  class="filter-menu"/>
<Menu/>
  
<HeaderStore/>
<Layout headerClass="filter-header"/>
<section class="store-product-listing" id="tienda">
  <section class="store-product-listing" id="tienda">
    <!-- Filtros -->
    <div class="store-filter-container">
      <!-- Price Range -->
      <div class="store-filter-section">
        <h4>Select Price Range</h4>
        <div class="store-price-range">
          <span class="store-price-value">$0 BDT</span>
          <input type="range" id="store-price-slider" class="store-slider" min="0" max="6000" value="0">
          <span>$6000 COP</span>
        </div>
        <button id="store-apply-price-filter" class="store-apply-filter-btn">Apply Filter</button>
      </div>

      <div class="store-filter-section">
        <h4>CATEGORIAS</h4>
        <ul class="product-categories">
          <li>Balibomba</li>
          <li>Balineras</li>
  
          <li class="has-submenu">
            <span>Bombas</span>
            <span class="toggle-sign">+</span>
            <ul class="submenu">
              <li>Baterias de GEL</li>
              <li class="has-submenu">
                <span>Baterias de Litio LIFEPO4</span>
                <span class="toggle-sign">+</span>
                <ul class="submenu">
                  <li>Modelo A</li>
                  <li>Modelo B</li>
                  <li>Modelo C</li>
                </ul>
              </li>
              <li>Baterías para Movilidad</li>
              <li>Baterías para UPS</li>
            </ul>
          </li>
  
          <li class="has-submenu">
            <span>Collarin</span>
            <span class="toggle-sign">+</span>
            <ul class="submenu">
              <li>Subcategoria 1</li>
              <li>Subcategoria 2</li>
            </ul>
          </li>
  
          <li class="has-submenu">
            <span>Cremallera del volante</span>
            <span class="toggle-sign">+</span>
            <ul class="submenu">
              <li>Subcategoria A</li>
              <li>Subcategoria B</li>
            </ul>
          </li>
       
        <li class="has-submenu">
          <span>Guaya Embrague</span>
          <span class="toggle-sign">+</span>
          <ul class="submenu">
            <li>Subcategoria A</li>
            <li>Subcategoria B</li>
          </ul>
        </li>
        
        <li class="has-submenu">
        <span>Horquilla</span>
        <span class="toggle-sign">+</span>
        <ul class="submenu">
          <li>Subcategoria A</li>
          <li>Subcategoria B</li>
        </ul>
        </li>
    
    <li class="has-submenu">
      <span>Kit de embrague</span>
      <span class="toggle-sign">+</span>
      <ul class="submenu">
        <li>Subcategoria A</li>
        <li>Subcategoria B</li>
      
    </li>
  
  <li class="has-submenu">
    <span>Retenedor Embrague</span>
    <span class="toggle-sign">+</span>
    <ul class="submenu">
      <li>Subcategoria A</li>
      <li>Subcategoria B</li>
    
  </li>
</ul>
<li class="has-submenu">
  <span>Servicios: Rectificar Volante del Motor</span>
  <span class="toggle-sign">+</span>
  <ul class="submenu">
    <li>Subcategoria A</li>
    <li>Subcategoria B</li>
  </ul>
</li>
</ul>
<li class="has-submenu">
  <span>Soporte de Motor y de Caja</span>
  <span class="toggle-sign">+</span>
  <ul class="submenu">
    <li>Subcategoria A</li>
    <li>Subcategoria B</li>
  </ul>
</li>
</ul>
      </div>
    </div>

    </div>

    <!-- Product Grid -->
    {productos.map((producto: Producto) => (
      <div class="store-product-item">
        <div class="image-container">
          <a href={`/product/${producto.id}`}>
            <img src={producto.imagenes[0]} alt={producto.nombre} />
          </a>
          <AddToCartButton client:only="react" productId={String(producto.id)} marcas={producto.marcas} />




        </div>
        <h4>{producto.nombre}</h4>
        <p>${producto.precio} BDT</p>
      </div>
    ))}
    </div>
  </section>
</section>

<Footer/>
</body >
</Layout>
<style>
  .product-categories {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .product-categories li {
    margin-bottom: 10px;
    display: inline-block;
    width: 100%;
    margin-bottom: 10px;
    padding: 12px 8px;
    position: relative;
    font-size: 15px;
    font-weight: 600;
    background-color: #00619a ;
    color: #fff;
    text-transform: capitalize;
    line-height: 1.4;
    font-family: 'Work Sans', sans-serif;
    font-size: 14px;
    transition: all .4s ease 0s;
    -webkit-transition: all .4s ease 0s;
    cursor: pointer;
  }
  .product-categories li:hover {
    background-color: #0373b3;
  }

.has-submenu {
    display: flex;
    flex-wrap: wrap;
    align-items: center
  }

  .has-submenu > span:first-child {
    flex-grow: 1;
  }

  .toggle-sign {
    margin-left: 10px;
    font-weight: bold;
    font-size: 16px;
    padding: 2px 8px;
    background-color: #ffffff;
    color: #000;
    border-radius: 3px;
    text-transform: initial;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 20px;
    height: 20px;
  }

  .submenu {
    width: 100%;
    list-style: none;
    padding: 0;
    margin: 10px 0 0 0;
    display: none;
  }

  .submenu li {
    background-color: #E3E1D9;
    color: #333;
    padding: 8px 15px;
    margin-bottom: 5px;
    border-radius: 4px;
    font-size: 14px;
    text-transform: initial;
    transition: all 0.3s ease;
  }

  .submenu li:hover {
    background-color: #e0e0e0;
  }

  .submenu.active {
    display: block;
  }
    /* Estilo para subcategorías anidadas */
  .submenu .has-submenu {
    background-color: #E3E1D9;
    color: #333;}
    .submenu .has-submenu > span:first-child {
    color: #333;
  }


  .image-container {
  position: relative;
}

/* Contenedor principal */
/* ======== Contenedor Principal ======== */
.store-product-listing {
  display: flex;
  align-items: flex-start;
  gap: 20px;
  padding: 20px;
  background-color: #f8f8f8;
  
  padding-top: 100px;

}

/* ======== Barra de Filtros ======== */
.store-filter-container {
  width: 300px;
  background-color: white;
  padding: 20px;
  border-radius: 12px;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  position: sticky;
  top: 20px;
  
}

.store-filter-container h4 {
  font-size: 1.2em;
  margin-bottom: 15px;
  font-weight: bold;
}

.store-filter-section {
  margin-bottom: 10px;
}

.store-filter-list {
  list-style: none;
  padding: 0;
  margin: 0;
  
}

.store-filter-list li {
  margin-bottom: 8px;
  display: flex;
  align-items: center;
}

.store-filter-list li input[type="checkbox"] {
  margin-right: 10px;
}

/* ======== Tags ======== */
.store-tags {
  display: flex;
  flex-wrap: wrap;
  gap: 10px;
}

.store-tag {
  padding: 8px 14px;
  background-color: #f0f0f0;
  border: 1px solid #ccc;
  border-radius: 20px;
  font-size: 0.9em;
  cursor: pointer;
}

.store-tag:hover {
  background-color: #00619a;;
  color: white;
  border-color: #00619a;;
}

/* ======== Contenedor de Productos ======== */
.store-product-grid {
  flex: 1;
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(220px, 1fr)); /* Mantiene los elementos en fila */
  align-self: flex-start;
  gap: 20px;
  justify-content: start;
  max-width: 900px;
}


.store-product-item {
  background-color: white;
  border: 1px solid #ddd;
  border-radius: 12px;
  padding: 15px;
  text-align: center;
  transition: all 0.3s ease;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  width: 100%;
  overflow: hidden;
  max-width: 250px;
 }

.store-product-item img {
  width: 100%; /* Ocupar todo el contenedor */
  height: 180px; /* Altura fija para uniformidad */
  object-fit: cover; /* Evita distorsión y recorta si es necesario */
  border-radius: 8px;
  transition: transform 0.3s ease; /* Efecto suave */
}


.store-product-item h4 {
  font-size: 1.1em;
  margin: 10px 0;
}

.store-product-item p {
  font-size: 1em;
  color: #555;
}

/* ======== Efectos Hover ======== */
.store-product-item:hover {
  transform: translateY(-5px);
  box-shadow: 0 6px 10px rgba(0, 0, 0, 0.15);
}
/* ======== Estilos Boton Add Carrito ======== */

/* Posiciona el botón sobre la imagen */
.add-to-cart-btn {
  position: absolute;
  bottom: 10px;
  left: 50%;
  transform: translateX(-50%);
  background-color: #00619a;;
  color: white;
  border: none;
  padding: 10px 16px;
  font-weight: bold;
  border-radius: 8px;
  cursor: pointer;
  opacity: 0;
  --tw-duration: .3s;
  transition-duration: 0.3s;
  pointer-events: none;
}

/* Hace que el botón aparezca al hacer hover sobre la imagen */
.image-container:hover .add-to-cart-btn {
  bottom: 20px;
  opacity: 1;
  pointer-events: auto;
}
/* Mostramos el botón al hacer hover sobre el producto */
.store-product-item:hover .add-to-cart-btn {
  bottom: 20px;
  opacity: 1;
  pointer-events: auto;
}

/* Asegúrate que el contenedor tenga posición relativa */

/* ======== Rango de Precio ======== */
.store-price-range {
  display: flex;
  align-items: center;
  gap: 10px;
}

.store-slider {
  width: 100%;
}

.store-price-value {
  min-width: 80px;
}

/* ======== Botón "Apply Filter" ======== */
#store-apply-price-filter,
.store-apply-filter-btn {
  width: 100%;
  margin-top: 10px;
  padding: 8px 12px;
  background-color: #00619a;
  color: white;
  border: none;
  border-radius: 5px;
  cursor: pointer;
  transition: background-color 0.3s ease;
}

#store-apply-price-filter:hover,
.store-apply-filter-btn:hover {
  background-color: #00619a;
}

@media (max-width: 768px) {
    .store-filter-container {
        width: 100%;
        position: relative;
        top: auto;
        margin-top: 20px; /* Espacio con los productos */
        order: 2; /* Hace que el filtro se mueva debajo de los productos */
    }
    .store-product-listing {
        flex-direction: column; /* Apila los elementos */
        align-items: center;
        position: relative;
        z-index: 1; /* Para que no queden debajo del menú */
    }

    .store-product-grid {
        display: grid;
        grid-template-columns: repeat(2, 1fr); /* 2 columnas en móviles */
        width: 100%;
        order: 1; /* Hace que los productos se muestren primero */
        gap: 10px;
        overflow: visible;
        position: relative;
  z-index: 1;
    }

    .store-product-item {
        max-width: 100%;
    }
}

  </style>
<script>
document.addEventListener('DOMContentLoaded', () => {
  const priceSlider = document.getElementById('store-price-slider') as HTMLInputElement;
  const priceValue = document.querySelector('.store-price-value');
  const applyFilterButton = document.getElementById('store-apply-price-filter');
  const productItems = document.querySelectorAll('.store-product-item');

  let currentPrice = priceSlider ? parseInt(priceSlider.value, 10) : 0;

  // 🔹 Actualizar el valor del slider en tiempo real
  if (priceSlider && priceValue) {
    priceSlider.addEventListener('input', () => {
      currentPrice = parseInt(priceSlider.value, 10);
      priceValue.textContent = `$${currentPrice} COP`;
    });
  }

  // 🔹 Evento del botón "Apply Filter"
  applyFilterButton?.addEventListener('click', () => {
    if (priceSlider) {
      currentPrice = parseInt(priceSlider.value, 10);
      console.log('Filtro aplicado. Precio máximo:', currentPrice);
      filterProducts();
    }
  });

  // 🔹 Función para filtrar productos según el precio
 function filterProducts() {
  productItems.forEach(item => {
    let priceElement = item.querySelector('p');
    if (priceElement && priceElement.textContent) {
      let priceText = priceElement.textContent.replace('$', '').replace(' COP', '');
      let price = parseFloat(priceText);

      // Si el slider está en 0, mostramos todos los productos
      if (currentPrice === 0 || price <= currentPrice) {
        (item as HTMLElement).style.display = 'block';
      } else {
        (item as HTMLElement).style.display = 'none';
      }
    }
  });
}

  // 🔹 Llama a la función de filtrado al cargar la página
  filterProducts();
});
</script>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const toggleButtons = document.querySelectorAll('.toggle-sign');
  
    toggleButtons.forEach(button => {
      button.addEventListener('click', (e) => {
        e.stopPropagation(); // evitar burbujeo
  
        const parentLi = button.closest('li');
        if (!parentLi) return; // 💡 Verificación de seguridad
  
        const submenu = parentLi.querySelector('.submenu');
        if (submenu) {
          submenu.classList.toggle('active');
          button.textContent = submenu.classList.contains('active') ? '−' : '+';
        }
      });
    });
  });
    </script>
  
